# Terraform kickstart template 
network --bootproto=static --device=vmnic0 --hostname=${esxi_hostname} --nameserver=${esxi_dnsservers[0]} --ip=${esxi_mgmtip} --netmask=${esxi_mgmtmask} --gateway=${esxi_defaultgtw} --vlanid=${esxi_mgmtvlanid} --addvmportgroup=0
%include /tmp/kickstart.cfg

%pre --interpreter=busybox
banner()
{
        clear
        echo
        echo
        echo -e "\033[32m \033[5m **************************************************\033[0m"
        echo -e "\033[32m \033[5m ***             HPE ESXi deployment Euronext       ***\033[0m"
        echo -e "\033[32m \033[5m **************************************************\033[0m"
        echo
        echo
}
exec </dev/tty1 >/dev/tty1
chvt 1
# Display Banner
banner

# Search for naaid on TARGET_ADAPTER
vmhba=$(/usr/bin/localcli storage core adapter list | grep "${esxi_target_adapter}" | awk '{print $1}')
bootnaaid=$(/usr/bin/localcli storage core path list | grep -B 2 "Adapter: $${vmhba}" | grep "Device:" | awk '{print $2}')

# Create kickstart file
echo "# Autogenerated kickstart for ${esxi_hostname}.${esxi_domainname}" > /tmp/kickstart.cfg
echo "accepteula" >> /tmp/kickstart.cfg
echo "rootpw --iscrypted ${esxi_rootpwd}" >> /tmp/kickstart.cfg
echo "clearpart --drives=$${bootnaaid} --overwritevmfs" >> /tmp/kickstart.cfg
echo "install --disk=$${bootnaaid} --overwritevmfs" >> /tmp/kickstart.cfg
echo "keyboard '${esxi_keyboard_layout}'" >> /tmp/kickstart.cfg
echo "reboot" >> /tmp/kickstart.cfg

echo "Kickstart /tmp/kickstart.cfg"
cat /tmp/kickstart.cfg

%firstboot --interpreter=busybox
banner()
{
        clear
        echo
        echo
        echo -e "\033[32m \033[5m **************************************************\033[0m"
        echo -e "\033[32m \033[5m ***        HPE ESXi deployment Euronext            ***\033[0m"
        echo -e "\033[32m \033[5m **************************************************\033[0m"
        echo
        echo
}

exec </dev/tty1 >/dev/tty1
chvt 1

#Display banner
banner

/bin/echo
/bin/echo
/bin/echo -e "\033[32m \033[5m **************************************************\033[0m"
/bin/echo -e "\033[32m \033[5m *** Starting HPE ESXi customization Euronext ...  ****\033[0m"
/bin/echo -e "\033[32m \033[5m **************************************************\033[0m"
/bin/echo
/bin/echo

# Wait for hostd
while ! /bin/vim-cmd hostsvc/runtimeinfo 1>/dev/null 2>&1; do
        /bin/echo "Waiting for hostd ..."
        /bin/sleep 10
done

LOGDIR="/tmp"
LOGFILE="install-${esxi_hostname}.log"
LOCAL_DATASTORE="${esxi_hostname}.${esxi_domainname}_boot"

# going to maintenance mode
/bin/echo "[START] : Going to maintenance mode" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system maintenanceMode set --enable yes

# Rename local Datastore
/bin/echo "[Local Datastore] : renaming Local Datastore ... " | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/vim-cmd hostsvc/datastore/rename datastore1 "$${LOCAL_DATASTORE}"

# HOSTNAME
/bin/echo "[HOSTNAME] : setting hostname=${esxi_hostname}.${esxi_domainname}" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system hostname set --fqdn=${esxi_hostname}.${esxi_domainname}

# NTP
/bin/echo "[NTP] : configuring NTP ..."
/bin/cat > /etc/ntp.conf << EOF
restrict default kod nomodify notrap noquery nopeer
restrict 127.0.0.1
%{ for ntpserver in esxi_ntpservers ~}
server ${ntpserver}
%{ endfor ~}
driftfile /etc/ntp.drift
EOF

/sbin/chkconfig ntpd on

# DNS
/bin/echo "[DNS] : Configuring DNS ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/echo "[DNS] : Removing dhcp search domain ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
srch=$(/usr/bin/esxcli network ip dns search list | awk -F':' '{print $2}')
for i in $srch//,/
do
        /usr/bin/esxcli network ip dns search remove --domain="$i"
done

/bin/echo "[DNS] : Setting Domain Search ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
%{ for domain in esxi_dnssearch ~}
/usr/bin/esxcli network ip dns search add --domain="${domain}"
%{ endfor ~}

/bin/echo "[DNS] : Removing dhcp DNS servers ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli network ip dns server remove --all --server=dummy

%{ for dnsserver in esxi_dnsservers ~}
/bin/echo "[DNS] : dns1=${dnsserver} ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli network ip dns server add --server=${dnsserver}
%{ endfor ~}

# Modify local log path
/bin/echo "[SYSLOG] : setting Syslog.global.defaultSize = 2048" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system syslog config set --default-size=2048

/bin/echo "[SYSLOG] : setting Syslog.global.logDirUnique = true" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system syslog config set --logdir-unique true

/bin/echo "[SYSLOG] : setting Syslog.Local.DatastorePath = $${LOCAL_DATASTORE}/logs" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/mkdir /vmfs/volumes/$${LOCAL_DATASTORE}/logs
/usr/bin/esxcli system syslog config set --logdir=/vmfs/volumes/$${LOCAL_DATASTORE}/logs

# Enable ESXi shell
/bin/echo "[SHELL] : Enabling ESXi shell ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/vim-cmd hostsvc/enable_esx_shell
/bin/vim-cmd hostsvc/start_esx_shell
# Enable Remote Tech Suppport SSH
/bin/echo "[SHELL] : Enabling SSH ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/vim-cmd hostsvc/enable_ssh
/bin/vim-cmd hostsvc/start_ssh

# Suppress warnings
/bin/echo "[SHELL] : Don't show warning for enabled local and remote shell access" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system settings advanced set --option="/UserVars/SuppressShellWarning" --int-value=1

# Power Management Policy
/bin/echo "[POWER] : Set Power Management Policy to High Performance" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli system settings advanced set --option=/Power/CpuPolicy --string-value="High Performance"

# Scratch location
scratchdirectory=/vmfs/volumes/$${LOCAL_DATASTORE}/.locker-${esxi_hostname}
/bin/echo "[SCRATCH DIR] : setting Scratch Loction to $${scratchdirectory}" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/mkdir -p $${scratchdirectory}
/bin/vim-cmd hostsvc/advopt/update ScratchConfig.ConfiguredScratchLocation string $${scratchdirectory}

# Pure Storage SATP RULE (by default starting with ESXi 7.0)
/bin/echo "[SATP RULE] : Creating Euronext SATP Rule for PureStorage All Flash Array" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli storage nmp satp rule add -s "VMW_SATP_ALUA" -V "PURE" -M "FlashArray" -P "VMW_PSP_RR" -O "policy=latency" -e "Euronext PureStorage FlashArray SATP Rule"

################################
# Wait
################################
/bin/echo "Waiting 10s ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/sleep 10

#################################################
# Network
#################################################
/bin/echo "[Network] : Disable ipv6" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli network ip set --ipv6-enabled false

#################################################
# vSwitch0 : vmnic0/active
# Usage : Management Network
#################################################
#Assign an IP-Address to the first VMkernel, this will be used for management
#/bin/echo "[vSwitch0|Management Network|${esxi_mgmtip}/${esxi_mgmtmask}] : Configure vmknic for 'Management Network' using static ip configuration" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
#/usr/bin/esxcli network ip interface ipv4 set --interface-name=vmk0 --ipv4="${esxi_mgmtip}" --netmask="${esxi_mgmtmask}" --type=static

# Set vSwitch0 num ports to 128
/bin/echo "[vSwitch0] : Setting numPorts to 128" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/vim-cmd hostsvc/net/vswitch_setnumports vSwitch0 128

#/bin/echo "[vSwitch0] : Refreshing Network hostsvc" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
#/bin/vim-cmd hostsvc/net/refresh

# vswitch0 security
/bin/echo "[vSwitch0|security policies] : Setting policy security options" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli network vswitch standard policy security set --allow-forged-transmits no --allow-mac-change no --allow-promiscuous no --vswitch-name vSwitch0

# 'Management Network' pg security
/bin/echo "[vSwitch0|Management Network|security policies] : Setting policy security options" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/usr/bin/esxcli network vswitch standard portgroup policy security set --allow-forged-transmits no --allow-mac-change no --allow-promiscuous no --portgroup-name "Management Network"

# Setting VlanId on "Management Network" portgroup
#if [ ! -z ${esxi_mgmtvlanid} ]
#then
#        /bin/echo "[vSwitch0|Management Network|VlanId] : Setting VlanId ${esxi_mgmtvlanid}" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
#        /usr/bin/esxcli network vswitch standard portgroup set --portgroup-name "Management Network" --vlan-id=${esxi_mgmtvlanid}
#fi

# Setting default Gateway
#/bin/echo "Setting default gateway to ${esxi_defaultgtw}" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
#/usr/bin/esxcli network ip route ipv4 add --gateway=${esxi_defaultgtw} --network=default

/bin/echo "[vSwitch0] : Refreshing Network hostsvc" | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/vim-cmd hostsvc/net/refresh

# Wait
/bin/echo "Waiting 10s ..." | /bin/tee -a $${LOGDIR}/$${LOGFILE}
/bin/sleep 10

# Backup Log Files
INSTALLLOGS="/vmfs/volumes/$${LOCAL_DATASTORE}/logs/install"
/bin/mkdir $${INSTALLLOGS}

/bin/cp /var/log/hostd.log "$${INSTALLLOGS}/firstboot-hostd.log"
/bin/cp /var/log/esxi_install.log "$${INSTALLLOGS}/firstboot-esxi_install.log"
/bin/cp $${LOGDIR}/$${LOGFILE} "$${INSTALLLOGS}/$${LOGFILE}"

/usr/bin/esxcli system shutdown reboot -d 10 -r "Installation Done. Rebooting in 10s ..."
